import requests
from bs4 import BeautifulSoup

def check_for_outdated_software(url):
    """
    Check for outdated software by looking for common version indicators in the page.
    """
    try:
        response = requests.get(url)
        response.raise_for_status()  # Check for HTTP request errors
        soup = BeautifulSoup(response.text, 'html.parser')

        # Example: Looking for common CMS version indicators
        version_indicators = ['wp-content', 'Joomla!', 'Drupal']
        for indicator in version_indicators:
            if indicator in response.text:
                print(f"Potential outdated software detected: {indicator}")
                return True
        
        print("No outdated software indicators found.")
        return False
    except requests.exceptions.RequestException as e:
        print(f"Error accessing {url}: {e}")
        return False

def check_for_exposed_sensitive_info(url):
    """
    Check if sensitive information is exposed in the HTML source.
    """
    try:
        response = requests.get(url)
        response.raise_for_status()  # Check for HTTP request errors
        soup = BeautifulSoup(response.text, 'html.parser')

        # Example: Searching for potentially sensitive information
        sensitive_patterns = ['password', 'api_key', 'secret']
        for pattern in sensitive_patterns:
            if pattern in response.text:
                print(f"Potentially sensitive information exposed: {pattern}")
                return True
        
        print("No sensitive information exposed.")
        return False
    except requests.exceptions.RequestException as e:
        print(f"Error accessing {url}: {e}")
        return False

# Example usage
target_url = "http://example.com"  # Replace with the URL you want to test
print(f"Scanning {target_url} for vulnerabilities...")

outdated_software = check_for_outdated_software(target_url)
sensitive_info = check_for_exposed_sensitive_info(target_url)
